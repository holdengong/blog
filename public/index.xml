<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Holden Gong</title>
    <link>https://holdengong.com/</link>
    <description>Recent content on Holden Gong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sat, 14 Mar 2020 23:00:55 +0800</lastBuildDate>
    
	<atom:link href="https://holdengong.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Test10</title>
      <link>https://holdengong.com/test10/</link>
      <pubDate>Sat, 14 Mar 2020 23:00:55 +0800</pubDate>
      
      <guid>https://holdengong.com/test10/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Test9</title>
      <link>https://holdengong.com/test9/</link>
      <pubDate>Sat, 14 Mar 2020 23:00:53 +0800</pubDate>
      
      <guid>https://holdengong.com/test9/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Test8</title>
      <link>https://holdengong.com/test8/</link>
      <pubDate>Sat, 14 Mar 2020 23:00:51 +0800</pubDate>
      
      <guid>https://holdengong.com/test8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Test7</title>
      <link>https://holdengong.com/test7/</link>
      <pubDate>Sat, 14 Mar 2020 23:00:48 +0800</pubDate>
      
      <guid>https://holdengong.com/test7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Test6</title>
      <link>https://holdengong.com/test6/</link>
      <pubDate>Sat, 14 Mar 2020 23:00:46 +0800</pubDate>
      
      <guid>https://holdengong.com/test6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Test5</title>
      <link>https://holdengong.com/test5/</link>
      <pubDate>Sat, 14 Mar 2020 23:00:39 +0800</pubDate>
      
      <guid>https://holdengong.com/test5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Test4</title>
      <link>https://holdengong.com/test4/</link>
      <pubDate>Sat, 14 Mar 2020 23:00:36 +0800</pubDate>
      
      <guid>https://holdengong.com/test4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Test3</title>
      <link>https://holdengong.com/test3/</link>
      <pubDate>Sat, 14 Mar 2020 23:00:34 +0800</pubDate>
      
      <guid>https://holdengong.com/test3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Test2</title>
      <link>https://holdengong.com/test2/</link>
      <pubDate>Sat, 14 Mar 2020 23:00:32 +0800</pubDate>
      
      <guid>https://holdengong.com/test2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Test1</title>
      <link>https://holdengong.com/test1/</link>
      <pubDate>Sat, 14 Mar 2020 23:00:29 +0800</pubDate>
      
      <guid>https://holdengong.com/test1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2构建个人博客--使用Webhook自动发布</title>
      <link>https://holdengong.com/hugo2/</link>
      <pubDate>Sat, 14 Mar 2020 21:15:28 +0800</pubDate>
      
      <guid>https://holdengong.com/hugo2/</guid>
      <description>概述 上篇介绍了怎么利用hugo搭建个人博客。 有一个地方还是有点不方便，就是git push之后需要等半个小时才能发布。
所以我想利用github的webhook实现每次推送自动发布。
github设置钩子 所谓的webhook,就是钩子,就是github搞事情的时候就会通知你。所以你需要准备一个接口接收github的post请求。 这里我设置为接收json格式数据，仅push时通知。 编写接口 生产环境一般是使用Travis Ci或者Jenkins来实现类似功能，但这对于我来说有点重型了。所以自己写个接口简单实现下。 需求很简单，每当有代码推送的时候，拉取git并发布到blog部署目录。
我这里使用.net core实现，代码十分简单，其实就一行，执行blog.sh脚本。
[ApiController] public class GitSubscriberController : ControllerBase { [Route(&amp;#34;api/blog/gitsubscriber&amp;#34;)] [HttpPost] public IActionResult GitSubscriber([FromBody]object request) { Process.Start(&amp;#34;/scripts/blog.sh&amp;#34;); return Ok(); } } 再看下这个blog.sh脚本的内容，也很简单，首先拉取git内容，再拷贝到部署目录就行了。
#!/bin/bash cd /git/blog git pull cp -rf /git/blog/public/. /www/wwwroot/www.holdengong.com/ 这里有3个小坑要注意
 第一行的 #!/bin/bash 是必须的 脚本必须是ANSI编码 需要执行命令 chmod +x blog.sh 是脚本可执行  完成 大功告成。接下来可以愉快的写日志了，写完只需要签入，自动发布，爽！
 这篇博客由系统自动发布
 </description>
    </item>
    
    <item>
      <title>1构建个人博客--使用Hugo快速成型</title>
      <link>https://holdengong.com/hugo1/</link>
      <pubDate>Sat, 14 Mar 2020 14:42:38 +0800</pubDate>
      
      <guid>https://holdengong.com/hugo1/</guid>
      <description>概述 人在武汉，病毒肆虐。
隔离久了，有点闷，闲余时间找点事情做。
建个博客吧， 内容不重要，写不写也不那么要紧，目前水平也写不出什么有深度的东西。
但是这个姿势一定要优美， 过程一定要折腾。
OK, 开干。
下载Hugo  https://github.com/gohugoio/hugo/releases
 笔者是Windows系统，下载hugo_0.67.0_Windows-64bit.zip，解压到本地后，将路径加入到环境变量。
创建站点 首先创建一个git仓库
拉取到本地
如文件夹名为blog
cd blog hugo new site . 编写正文 hugo new hello-world.md 下载主题 cd theme git clone https://github.com/spf13/hyde.git 调试 hugo server --theme=hyde --buildDrafts 然后浏览器打开 http://localhost1313 可以查看效果
发布 发布前将hello-world.md的draft字段修改为true, https://holdengong.com/ 为你网站的域名
hugo --theme=hyde -b https://holdengong.com/ 执行完后会发现生成了public文件夹及内容
部署 云服务器可以使用腾讯云的学生版  https://cloud.tencent.com/act/campus?fromSource=gwzcw.2432501.2432501.2432501&amp;amp;utm_medium=cpc&amp;amp;utm_id=gwzcw.2432501.2432501.2432501
 安装宝塔面板linux管理工具  https://www.bt.cn/
 安装git yum -y install git 拉取git仓库, e.g.仓库目录为/git/blog
宝塔新建站点 e.g.站点根路由为/www/wwwroot/www.holdengong.com
定时发布 利用linux的定时任务做一个简单的定时发布</description>
    </item>
    
  </channel>
</rss>